/*Starting from floor 1, simulate that the elevator is called to floor 3. When the elevator is 
just about to pass floor 2, a call to floor 2 is received. Check in your test case that the elevator 
will first visit 3, and only afterwards floor 2. The planning module needs to implement this order, 
since it is not possible to stop the elevator right away when it is already very close to floor 2.*/

// testCase2(); simulateCarMotor();

SIGNAL void testCase2() {
  int pos;
  int i, j;
  int lastPulsePinValue;
  int reached1, reached2, reached3, visitOrder, calledTo2;
  int at_floor;

  reached1 = 0;
  reached2 = 0;
  reached3 = 0;
  pos = 0;

  // close the doors
  PORTC |= 1 << 8;
  
  // let's go to floor 3
  printf("going to floor 3\n");
  PORTC |= 1 << 2;
  
  // count the pulses to know what our position is
  lastPulsePinValue = PORTC & (1 << 9);
  for (i = 0; i < 3500; ++i) {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
      pos += TIM3_CCR1 ? 1 : -1;
    lastPulsePinValue = PORTC & (1 << 9);
  
  
  // Just about to pass floor 2 now, making a call
  if(pos == 360 && !calledTo2)
  {
  	printf("calling to floor 2\n");
  	PORTC ^= 1 << 2;
  	PORTC |= 1 << 1;
	calledTo2 = 1; // make the call only once
   }
    swatch(0.0025);
  }
  
  // reset the pin
  PORTC ^= 1 << 1;
  
  // we give the elevator 33s time to go to floors 3 and 2
  for (j = 0; j < 33 && (!reached3 || !reached2); ++j)
  {
		at_floor = 0;
	  // every second, check whether we are at a floor
	  if ((PORTC & (1 << 7)) && !TIM3_CCR1 && !TIM3_CCR2) 
	  {
		if (pos >= 399 && pos <= 401 && !reached2) 
		{
		 // reached floor 2
		 printf("arrived at floor 2\n");
		 reached2 = 1;
		if(!reached3) // if you reach floor 2 before floor 3, test should fail
			visitOrder = 0;
		else
			visitOrder = 1;
		 at_floor = 1;
		 }  
		 
		if (pos >= 799 && pos <= 801 && !reached3) 
		{
		 // reached floor 3
		 printf("arrived at floor 3\n");
		 reached3 = 1;
		 at_floor = 1;
		 }
	   }
   
 // if we have stopped at a floor, we open the doors for 1s
 if (at_floor)
   PORTC ^= 1 << 8;

// wait 1s
 for (i = 0; i < 400; ++i) 
 {
    if (lastPulsePinValue < (PORTC & (1 << 9)))
		pos += TIM3_CCR1 ? 1 : -1;
    lastPulsePinValue = PORTC & (1 << 9);
    swatch(0.0025);
 }

    if (at_floor)
      PORTC ^= 1 << 8;
  }
  
  
  
  if (!reached2) {
    while (1) {
      printf("Test-case failed: did not get to floor 2!\n");
      swatch(0.02);
    }
  }

  if (!reached3) {
    while (1) {
      printf("Test-case failed: did not get to floor 3!\n");
      swatch(0.02);
    }
  }
  
  if (!visitOrder) {
    while (1) {
      printf("Test-case failed: did not get to floor 3 FIRST!\n");
      swatch(0.02);
    }
  }

  while (1) {
    printf("Test-case succeeded\n");
    swatch(0.02);
  }

}